console.log('Привет!');
console.log(123);

// Однострочный комментарий

/*
многострочный
комментарий
*/

// переменные
// let, const, ver

let message = 'Привет' //нельзя получить к переменной до иницилизации
console.log(message);
message = 'Пока!'
console.log(message);

//var
// можно получить доступ к ней до объявления - undefined

const messageConst = 'Доброе утро' // нельзя менять

// можно объвлять сразу несколько переменных, но лучше иметь каждую свою
const 
name = 'Bob',
age = 28,
isDeveloper = true //можно также в одну строку написать

const admin = name
console.log(admin); // Bob

// если в самом начале документа JS прописать 'use strict' , весь код будет работать в строгом режиме


// ** - оператор возведения в степень
console.log(2 **16);

// % - оператор остатка от деления
console.log(13 % 5);

// унарные оператор (-10) пишется слитно вместе с числом


// строки тоже можем складывать
 let messageString = 'Привет'

 messageString += ', друг!'

 messageString += 'Как дела?'

 console.log(messageString);



  // Инкременты 
 let x = 1;
let y = 2;

let result1 = ++x; // Префиксный инкремент
let result2 = y++; // Постфиксный инкремент

console.log(x);      // Вывод: 2
console.log(result1); // Вывод: 2 (поскольку x было увеличено)
console.log(y);      // Вывод: 3
console.log(result2); // Вывод: 2 (поскольку y было увеличено только после возврата)
 

// Основные отличия
// - Префиксный инкремент** (`++x`): Сначала увеличивает значение на 1, затем возвращает это новое значение.
// - Постфиксный инкремент** (`x++`): Сначала возвращает текущее значение, затем увеличивает его на 1.

// СПЕЦСИМВОЛЫ

// Символ	Описание
// \n   	Перевод строки
// \r	   В текстовых файлах Windows для перевода строки используется комбинация символов \r\n, а на других ОС это просто \n. Это так по историческим причинам, ПО под Windows обычно понимает и просто \n.
// \', \", \`	    Кавычки
// \\	    Обратный слеш
// \t	     Знак табуляции
// \b, \f, \v	    Backspace, Form Feed и Vertical Tab — оставлены для обратной совместимости, сейчас не используются.


// Изменение регистра
// Методы toLowerCase() и toUpperCase() меняют регистр символов:

console.log( 'Interface'.toUpperCase() ); // INTERFACE
console.log( 'Interface'.toLowerCase() ); // interface
// Если мы захотим перевести в нижний регистр какой-то конкретный символ:

console.log( 'Interface'[0].toLowerCase() ); // 'i'


// Строки также имеют ещё кое-какие полезные методы:
// str.trim() — убирает пробелы в начале и конце строки.
// str.repeat(n) — повторяет строку n раз.